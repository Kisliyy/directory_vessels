plugins {
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.2.1'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

mainClassName = 'com.smartgeosystems.vessels_core.VesselsCoreApplication'

springBoot {
	mainClass = 'com.smartgeosystems.vessels_core.VesselsCoreApplication'
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	//spring retry
	implementation 'org.springframework.retry:spring-retry:1.3.4'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	//spring cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.1.6'

	implementation project(':common-utils')

	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//kafka with avro
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.avro:avro:1.11.1'

	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation "org.testcontainers:testcontainers:1.18.3"
	testImplementation 'org.testcontainers:postgresql:1.18.3'
	testImplementation "org.testcontainers:junit-jupiter:1.18.3"
}

avro {
	createOptionalGetters = true
	createSetters = true
}
