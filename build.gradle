plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.13'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.github.davidmc24.gradle.plugin.avro' version '1.2.1'
}

group = 'com.smartgeosystems'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.liquibase:liquibase-core'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'

	//kafka with avro
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.avro:avro:1.11.1'

	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'org.postgresql:postgresql'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

avro {
	createOptionalGetters = true
	createSetters = true
}

tasks.named('test') {
	useJUnitPlatform()
}
